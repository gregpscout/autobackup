*** Keywords ***
User is on PCR Site  [Arguments]  ${url}  ${browser}  
	Open Browser  ${url}  ${browser}
	Maximize Browser Window
		
Login to PCR  [Arguments]  ${username}  ${password}  ${databaseId}
    Title Should be  PCRecruiter HTML Interface
    Select Frame  list
    Input Text  user  ${username}
    Input Password  pw  ${password}
    Select From List  db  ${databaseId}
    Click Link  myhref_1
    Verify successful login to PCR
    Unselect Frame

Verify successful login to PCR
    Wait Until Keyword Succeeds  10  10  Title Should be  PCRecruiter (SCOUTUSER/SCOUTTEST1)

Go to Scout Iframe in PCR
  [Documentation]  Takes user to Scout iframe in PCR if already logged in to PCR
    Click Position Tab in PCR
    Select Frame  list
    Click Link  Scout
    Unselect Frame
    Selecting ScoutFrame in PCR
    Wait Until Page Contains  20  20  Scout
    Unselect Frame

Click Position Tab in PCR
    Select Frame  menu
    Wait Until Keyword Succeeds  10  10  Click Link  myhref_4
    Unselect Frame

Search Jobs Orders Tab on Scout For PCR
  [Documentation]  Takes user to search jobs orders tab in Scout iframe. The frame unselection is done only after Import Scout Job into PCR keyword to avoid multiple frame select/unselect. 
    Selecting ScoutFrame in PCR
    Click link  signals-search
    Verify User is on Search Jobs Page for Scout in PCR

Verify User is on Search Jobs Page for Scout in PCR
    Wait Until Keyword Succeeds  10  10  Element Should Be Visible  advanced-search

Test Clear Button on Scout For PCR 
  [Documentation]  Verifies clear button works on Scout iframe by entering random text and clearing it
    Input Text  keyword  abcde
    Textfield Should Contain  keyword  abcde  
    Click Element  clear
    Textfield Should Contain  keyword  \

Import Scout Job into PCR  [Arguments]  ${jobTitle}
  [Documentation]  Searches and imports specified job from Scout iframe into PCR
    Search for Job by Title in Scout For PCR  ${jobTitle}
    Sleep  5s
    Select Checkbox  xpath=//*[@id="req-results-table"]/tbody/tr/td[1]/input
    Click Button  import-selected
    Wait Until Keyword Succeeds  20  20  Element Should Be Visible  import-confirm
    Wait Until Page Contains  2  2  imported-jobs
    Unselect Frame

Search for Job by Title in Scout For PCR  [Arguments]  ${jobTitle}
  [Documentation]  Searches for specified job on Scout iframe
    Input Text  keyword  ${jobTitle} 
    Click Element  search-button

# Currently this below keyword is not being used in the  PCR smoke test as we have the PCR frame blocking the popup issue. This keyword can be used when we invoke the iframe on a seperate window and test the 'Back to Search' button during regression testing.
Back to Search on Scout for PCR
  [Documentation]  selects back to search button after importing a job from Scout into PCR
    Click Button  import-back-to-list   
    Wait Until Keyword Succeeds  20  10  Verify User is on Search Jobs Page for Scout

Go To PCR Position Page to View Imported Job  [Arguments]  ${jobTitle}  ${status}
  [Documentation]  Goes back to Position page after importing a job from Scout into PCR to view the job
    Click Position Tab in PCR
    Select Frame  list
    Input Text  datainputa  ${jobTitle}
    Select From List  dropdownc  Status (Dropdown)
    Select From List  datainputc  ${status}
    Click Link  myhref_2
    Click Link  ${jobTitle}
    Unselect Frame
    Verify the Job Selected is the Job Displayed in PCR  ${jobTitle}

Verify the Job Selected is the Job Displayed in PCR  [Arguments]  ${jobTitle}
    Select Frame  detail
    Textfield Should Contain  title  ${jobTitle}
    Unselect Frame

Go Back to Position View
  [Documentation]  Goes back to Position detail view to set up a second interview/submission
    Select Frame  detail
    Click Link  myhref_1
    Unselect Frame

Click Candidate Tab in PCR
    Select Frame  menu
    Click Link  myhref_3
    Unselect Frame

Search a Candidate in PCR  [Arguments]  ${candidate_firstname}  ${candidate_lastname}
    Select Frame  list
    Input Text  datainputa  ${candidate_firstname}
    Input Text  datainputb  ${candidate_lastname}
    Click Link  myhref_2
    Click Link  ${candidate_lastname}, ${candidate_firstname}
    Unselect Frame

Edit Candidate Status Before Setting Up Interview  [Arguments]  ${candidate_firstname}  ${candidate_lastname}  ${candidate_id}
    Click Candidate Tab in PCR
    Search a Candidate in PCR  ${candidate_firstname}  ${candidate_lastname}
    Select Frame  detail
    Textfield Should Contain  identification  ${candidate_id}
    Select From List  candidatestatus  C
    Click Link  myhref_4
    Unselect Frame

Set Up Interview for Imported Job  [Arguments]  ${candidate_firstname}  ${candidate_lastname}
    Select Frame  detail
# Confirm that the imported job defaults to 'Pending' status   
    Element Should Contain  status  Pending
    Mouse Over  myhref_24
    Click Link  myhref_25
    Click Link  myhref_3
    Select Window  title=Search Results
    Input Text  xpath=//*[@tabindex="1"]  ${candidate_firstname}
    Input Text  xpath=//*[@tabindex="2"]  ${candidate_lastname}
    Click Link  myhref_1
    Click Link  xpath=//*[@id="bodysendname"]/table[1]/tbody/tr[3]/td[1]/a
    Select From List  itype  11
    Input Text  stype  Scout
    Click Link  xpath=//*[@id="bodysendout"]/a[1]
    Sleep  2s
    Select Window  PCR
    Unselect Frame

Test Employer Info is Blinded to the Recruiter After Candidate Submission  [Arguments]  ${jobTitle}
    Select Frame  detail
    Click Link  myhref_1
    Textfield Should Contain  title  ${jobTitle}
    Textfield Should Contain  contact  Scout
    Textfield Should Contain  phone  ${EMPTY}
    Textfield Should Contain  email  ${USERNAME_TPXADMIN_STG}
    Unselect Frame

Test Employer Info is Un-blinded After Candidate gets Accepted by Employer
  [Arguments]  ${jobTitle}
    Select Frame  detail
    Textfield Should Contain  title  ${jobTitle}
    Textfield Should Contain  contact  ${TBE_CONTACT_TEST}
    Textfield Should Contain  phone  ${TBE_PHONE_TEST}
    Textfield Should Contain  email  ${TBE_EMAIL_TEST}
    Unselect Frame

Place the Accepted Candidate  [Arguments]  ${candidate_fullname}  ${candidate_lastname}  ${candidate_firstname}
    Select Frame  detail
    Mouse Over  myhref_24
    Click Link  myhref_25
    Sleep  2s
    Click Link  myhref_11
    Click Link  myhref_2
    Click Element  xpath=//*[@id="bodyplace"]/table[2]/tbody/tr[2]/td[2]/table/tbody/tr/td[3]/table
    Select Window  title=Dropdown List
    Input Text  LOOKUP  ${candidate_lastname}, ${candidate_firstname} 
    Click Element  INPUT
    Click Element  td1
    Select Window  PCR
    Select Frame  detail
    Click Link  myhref_9
    Unselect Frame

Delete Job from PCR  [Arguments]  ${jobTitle}
    Select Frame  detail
    Sleep  5s
    Click Link  myhref_5
    Confirm Action
    Unselect Frame

Test Links on Scout For PCR  [Arguments]  ${TEST_SCOUTLINK}
    [Documentation]  PCR uses frames and because of that, the feedback modal submit button is getting hidden beneath the PCR detail frame. Since the test cannot view the modal, the workaround is to open the scout iframe in its own window and test the feedback link
    Go To  ${TEST_SCOUTLINK}
    Test Feedback Link on Scout  ${feedback_input}  ${feedback_subject}  ${TEST_EMAIL_ID}  ${TEST_EMAIL_PWD}
    Test Need Help with Scout Link for PCR  ${needhelp_pcr}  ${needhelp_text}

Test Feedback Link on Scout  [Arguments]  ${feedback_input}  ${feedback_subject}  ${EMAIL_ID}  ${EMAIL_PWD}
    Click Link  xpath=//*[@class="feedback-link"]
    Wait Until Page Contains  5  5  feedback-modal__headline-text
    Input Text  feedback-modal__feedback-textarea  ${feedback_input}
    Click Button  feedback-modal__submit
    Sleep  2s
    Validate Email Received  ${feedback_input}  ${feedback_subject}  ${EMAIL_ID}  ${EMAIL_PWD}  ${NOREPLY_TEST_EMAIL}

Test Need Help with Scout Link for PCR  [Arguments]  ${needhelp_link}  ${needhelp_text}
    Click Link  xpath=//*[@class="faq"]
    Select Window  title=${needhelp_link}
    Page Should Contain  ${needhelp_text}
    Close Window

Validate Email Received  [Arguments]  ${validate_input}  ${validate_subject}  ${EMAIL_ID}  ${EMAIL_PWD}  ${NOREPLY_EMAIL}
    Open Mailbox  server=imap.googlemail.com  user=${EMAIL_ID}  password=${EMAIL_PWD}   
    ${latest}=  Wait for mail  fromEmail=${NOREPLY_EMAIL}  toEmail=${SCOUT_QA_EMAIL}  timeout=60
    ${parts}=  Walk Multipart Email  ${latest}
    @{fields}=  Get Multipart Field Names
    ${subject}=  Get Multipart Field  Subject
    Should Be Equal   ${subject}   ${validate_subject}
    ${payload}=  Get Multipart Payload  decode=True
    ${content}=  Should Contain  ${payload}  ${validate_input}
    Close Mailbox

Logout of PCR
    Select Frame  menu
    Click Link  myhref_13
    Confirm Action
    Unselect Frame

Selecting ScoutFrame in PCR
  [Documentation]  PCR needs frame selection to be able to verify and validate actions
    Select Frame  list
    Select Frame  scoutframe


