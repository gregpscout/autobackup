*** Settings ***
Library           Selenium2Library
Library           ImapLibrary
Library           Screenshot
Resource          ../../keywords/pcr/ui_pcr_keywords.txt
Resource          ../../keywords/db/sync_tasks.txt
Resource          ../../resources/settings.txt  
Suite Teardown    Close All Browsers
Variables         ../../models/Requisition_Models.py
Variables         ../../models/Candidate_Models.py
Variables         ../../models/Email_Templates.py
			
*** Variables ***
${browser}                 googlechrome
${needhelp_pcr}            Scout for PCRecruiter - Go Scout Go  
${needhelp_text}           Scout for PCRecruiter
${status_pending}          P
${status_filled}           F
${syncSubmissions}         ./manage.py --sync sync-pcr-submissions

*** Test Cases ***
Scenario: PCR Smoke Test for Searching and Importing a Job 
  [Documentation]  Testing PCR for the following
  ...  Search Iframe for Job and import
  ...  Verify that Job is imported
  [Tags]  SMOKE  JOBIMP
	  Given User goes to PCR Site and Logs In  ${USERNAME_PCR}  ${PASSWORD_PCR}  ${DATABASEID_PCR}
	  And Go to Scout Iframe in PCR
	  When Search Jobs Orders Tab on Scout For PCR
	  Then Test Clear Button on Scout For PCR
      And Import Scout Job into PCR  ${TBE_REQ4['title']}

Scenario: PCR Smoke Test for Editing candidates, Setting up Interviews and Employer Contact Blinding feature verification
  [Documentation]  Testing PCR for the following
  ...  Edit Candidate Status for 2 candidates (1 for Accept and 1 for Reject)
  ...  Setting up Candidate Submissions 
  ...  Verifying that Employer Contact Info Blinded
  [TAGS]  SMOKE  SUBMISSIONS  BLINDING
    Given User goes to PCR Site and Logs In  ${USERNAME_PCR}  ${PASSWORD_PCR}  ${DATABASEID_PCR}
    Edit Candidate Status Before Setting Up Interview  ${PCR_Accept_Candidate['first_name']}  ${PCR_Accept_Candidate['last_name']}  ${PCR_Accept_Candidate['id']}
    Go To PCR Position Page to View Imported Job  ${TBE_REQ4['title']}  ${status_pending}
    Set Up Interview for Imported Job  ${PCR_Accept_Candidate}
    Go Back to Position View
    Set Up Interview for Imported Job  ${PCR_Reject_Candidate}
    Test Employer Info is Blinded to the Recruiter After Candidate Submission  ${TBE_REQ4['title']}
    Run Sync Jobs  ${HOST_TEST}  ${syncSubmissions}
    Wait Until Keyword Succeeds  120  5  Validate Email Received for Candidate Submission  ${PCR_SUBMISSION}  ${TBE_REQ4['title']}  ${TEST_EMAIL_ID}  ${TEST_EMAIL_PWD}  ${NOREPLY_TEST_EMAIL}  ${SCOUT_PCR_EMAIL}
    Then Logout of PCR
#Need to verify that the imported job does not exist after import (clean up script needed to be able to write/test this)

Scenario: PCR Smoke Test for Employer Contact Un-blinding and Candidate Placement
  [Documentation]  Testing PCR for the following
  ...  Verify Employer Contact Info is Un-blinded after Candidate Acceptance
  ...  Candidate Placement
  [TAGS]  SMOKE  PLACEMENT  UNBLINDING
    Given User goes to PCR Site and Logs In  ${USERNAME_PCR}  ${PASSWORD_PCR}  ${DATABASEID_PCR}
    Go To PCR Position Page to View Imported Job  ${TBE_REQ4['title']}  ${status_pending}
    Test Employer Info is Un-blinded After Candidate gets Accepted by Employer  ${TBE_REQ4['title']}
    Place the Accepted Candidate  ${PCR_Accept_Candidate['full_name']}  ${PCR_Accept_Candidate['last_name']}  ${PCR_Accept_Candidate['first_name']}
    Then Logout of PCR

Scenario: PCR Cleanup
  [Documentation]  Once entire Smoke test is complete, delete the recently 'placed' job from PCR.
  [TAGS]  CLEAN  CLEANUP_PCR
      Given User goes to PCR Site and Logs In  ${USERNAME_PCR}  ${PASSWORD_PCR}  ${DATABASEID_PCR}
      Go To PCR Position Page to View Imported Job  ${TBE_REQ4['title']}  ${status_filled}
      Delete Job from PCR  ${TBE_REQ4['title']}
      Then Logout of PCR

Scenario: PCR Test Links
  [Tags]  LINKS  QUICK
    Given User goes to PCR Site and Logs In  ${USERNAME_PCR}  ${PASSWORD_PCR}  ${DATABASEID_PCR}
    Go to Scout Iframe in PCR
    Test Links on Scout For PCR  ${TEST_SCOUTLINK}  ${PCR_FEEDBACK}

Scenario: PCR Regression Test For Submitting Candidates with Missing Resume
  [Documentation]  Testing PCR for the following
  ...  Submit Candidate with missing resume
  ...  This expects TBE_REQ4 to be already imported
  [Tags]  REGRESSION  MISSINGRESUME
    Given User goes to PCR Site and Logs In  ${USERNAME_PCR}  ${PASSWORD_PCR}  ${DATABASEID_PCR}
    Go To PCR Position Page to View Imported Job  ${TBE_REQ4['title']}  ${status_pending}
    Set Up Interview for Imported Job  ${PCR_Candidate_Missing_Resume}
    Run Sync Jobs  ${HOST_TEST}  ${syncSubmissions}  
    Wait Until Keyword Succeeds  120  5  Validate Email Received for Candidate Submission  ${PCR_NO_RESUME}  ${PCR_Candidate_Missing_Resume['full_name']}  ${TEST_EMAIL_ID}  ${TEST_EMAIL_PWD}  ${NOREPLY_TEST_EMAIL}  ${SCOUT_PCR_EMAIL}  

Scenario: PCR Regression Test For Submitting Candidates with Missing Email
  [Documentation]  Testing PCR for the following
  ...  Submit Candidate with missing email
  ...  This expects TBE_REQ4 to be already imported
  [Tags]  REGRESSION  MISSINGEMAIL
    Given User goes to PCR Site and Logs In  ${USERNAME_PCR}  ${PASSWORD_PCR}  ${DATABASEID_PCR}
    Go To PCR Position Page to View Imported Job  ${TBE_REQ4['title']}  ${status_pending}
    Set Up Interview for Imported Job  ${PCR_Candidate_Missing_Email}
    Run Sync Jobs  ${HOST_TEST}  ${syncSubmissions}  
    Wait Until Keyword Succeeds  120  5  Validate Email Received for Candidate Submission  ${PCR_NO_EMAIL}  ${PCR_Candidate_Missing_Email['full_name']}  ${TEST_EMAIL_ID}  ${TEST_EMAIL_PWD}  ${NOREPLY_TEST_EMAIL}  ${SCOUT_PCR_EMAIL}


  
